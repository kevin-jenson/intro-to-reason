// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function b(a, b$1) {
  return a + b$1 | 0;
}

var greetings = "hello";

var helloWorld = "" + (String(greetings) + ", kevin");

console.log("Hello, BuckleScript and Reason!");

var result = "First " + String(3);

function reverseNum(num) {
  var first = num % 10;
  var second = num / 10 | 0;
  return Caml_int32.imul(first, 10) + second | 0;
}

function crossProduct(vector1, vector2) {
  var b3 = vector2[2];
  var b2 = vector2[1];
  var b1 = vector2[0];
  var a3 = vector1[2];
  var a2 = vector1[1];
  var a1 = vector1[0];
  return /* tuple */[
          Caml_int32.imul(a2, b3) - Caml_int32.imul(a3, b2) | 0,
          Caml_int32.imul(a3, b1) - Caml_int32.imul(a1, b3) | 0,
          Caml_int32.imul(a1, b2) - Caml_int32.imul(a2, b1) | 0
        ];
}

function addVectors(param, param$1) {
  return /* tuple */[
          param[0] + param$1[0] | 0,
          param[1] + param$1[1] | 0,
          param[2] + param$1[2] | 0
        ];
}

console.log(addVectors(/* tuple */[
          1,
          2,
          3
        ], /* tuple */[
          1,
          2,
          3
        ]));

var whoami = /* record */[
  /* name */"Kevin",
  /* age */22
];

var person = /* record */[
  /* name */"Kevin Jenson",
  /* age */34
];

var a = "Hello";

var marsDestination = /* record */[
  /* destinationName */"Mars",
  /* constellation */"Pisces",
  /* coordinates : record */[
    /* ra : tuple */[
      1,
      2,
      3
    ],
    /* dEc : tuple */[
      2,
      3,
      4
    ]
  ]
];

var coordinates = /* record */[
  /* ra : tuple */[
    1,
    2,
    3
  ],
  /* dEc : tuple */[
    2,
    3,
    4
  ]
];

var tup = /* tuple */[
  1,
  2
];

exports.whoami = whoami;
exports.b = b;
exports.greetings = greetings;
exports.helloWorld = helloWorld;
exports.person = person;
exports.a = a;
exports.marsDestination = marsDestination;
exports.coordinates = coordinates;
exports.tup = tup;
exports.result = result;
exports.reverseNum = reverseNum;
exports.crossProduct = crossProduct;
exports.addVectors = addVectors;
/* helloWorld Not a pure module */
